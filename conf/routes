# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                   @controllers.Application.index
GET           /hello/:user                                        @controllers.Application.hello(user: String)

GET           /queries                                            @controllers.StoredQueries.list
GET           /queries/:id                                        @controllers.StoredQueries.show(id: java.util.UUID)
DELETE        /queries/:id                                        @controllers.StoredQueries.delete(id: java.util.UUID)
POST          /queries                                            @controllers.StoredQueries.create

GET           /projects                                           @controllers.Projects.list
PUT           /projects/:slug                                     @controllers.Projects.upsert(slug: String)
GET           /projects/:slug                                     @controllers.Projects.show(slug: String)
DELETE        /projects/:slug                                     @controllers.Projects.delete(slug: String)
POST          /projects/:slug/action/snapshot                     @controllers.Snapshots.create(slug: String)
GET           /projects/:slug/snapshots                           @controllers.Snapshots.list(slug: String)
POST          /projects/:slug/snapshots/:id/action/restore        @controllers.Snapshots.restore(slug: String, id: java.util.UUID)

# Source code import
POST          /projects/:project/wipe                             @controllers.Import.wipe(project: String)
GET           /projects/:project/import/status                    @controllers.Import.status(project: String)
POST          /projects/:project/import/start                     @controllers.Import.importAst(project: String)

# Source export
GET           /projects/:project/packages                         @controllers.Packages.list(project: String)
GET           /projects/:project/packages/:pkg/uml                @controllers.Packages.uml(project: String, pkg: String, format="txt")
GET           /projects/:project/packages/:pkg/uml/:format        @controllers.Packages.uml(project: String, pkg: String, format: String)
GET           /projects/:project/files                            @controllers.Files.list(project: String)
HEAD          /projects/:project/files/*file                      @controllers.Files.check(project: String, file: String)
GET           /projects/:project/files/*file                      @controllers.Files.show(project: String, file: String)

# Model generation
GET           /projects/:project/model                            @controllers.Model.show(project: String)
POST          /projects/:project/model/generate                   @controllers.Model.generate(project: String)
GET           /projects/:project/model/classes                    @controllers.Classes.list(project: String)
GET           /projects/:project/model/classes/graph              @controllers.Classes.graph(project: String)
GET           /projects/:project/model/classes/:clazz             @controllers.Classes.show(project: String, clazz: String)
GET           /projects/:project/model/classes/:clazz/uml         @controllers.Classes.uml(project: String, clazz: String, format="txt")
GET           /projects/:project/model/classes/:clazz/uml/:format @controllers.Classes.uml(project: String, clazz: String, format: String)
GET           /projects/:project/model/types                      @controllers.Types.list(project: String)
GET           /projects/:project/model/types/:typ                 @controllers.Types.show(project: String, typ: String)

POST          /projects/:project/cypher                           @controllers.Cypher.execute(project: String, format="json")
POST          /projects/:project/cypher/:format                   @controllers.Cypher.execute(project: String, format: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)